import { useState, useRef, useEffect } from "react";
import { Send } from "lucide-react";
import ChatMessage from "./ChatMessage";
import InputArea from "./InputArea";

interface Message {
  id: string;
  text: string;
  isUser: boolean;
  timestamp: string;
}

interface ChatWindowProps {
  subject: string;
}

const ChatWindow = ({ subject }: ChatWindowProps) => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const welcomeMessages = {
      writing: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø–∏—Å—å–º—É. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –ø–∏—Å—å–º–∞, –≥—Ä–∞–º–º–∞—Ç–∏–∫—É, —Å—Ç–∏–ª—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–µ–∫—Å—Ç–æ–≤. –ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã!",
      speaking: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è, –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!",
      math: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏, –æ–±—ä—è—Å–Ω—é —Ñ–æ—Ä–º—É–ª—ã –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±–æ–π —Ç–µ–º–µ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏!"
    };

    const welcomeMessage: Message = {
      id: "welcome",
      text: welcomeMessages[subject as keyof typeof welcomeMessages] || "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
      isUser: false,
      timestamp: new Date().toISOString(),
    };

    setMessages([welcomeMessage]);
  }, [subject]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!inputValue.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputValue,
      isUser: true,
      timestamp: new Date().toISOString(),
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue("");
    setIsLoading(true);

    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ò–ò –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞
    setTimeout(() => {
      let aiResponse = "";
      
      if (subject === "writing") {
        if (inputValue.toLowerCase().includes("–≥—Ä–∞–º–º–∞—Ç–∏–∫")) {
          aiResponse = "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ! –í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º:\n\n1. **–ü–æ–¥–ª–µ–∂–∞—â–µ–µ –∏ —Å–∫–∞–∑—É–µ–º–æ–µ** –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –≤ —á–∏—Å–ª–µ –∏ –ª–∏—Ü–µ\n2. **–ó–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è** –≤–∞–∂–Ω—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–º—ã—Å–ª–∞\n3. **–ü–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤** –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–∏–ª—å –∏ —è—Å–Ω–æ—Å—Ç—å\n\n–•–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ –∏–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏?";
        } else if (inputValue.toLowerCase().includes("—Å—Ç–∏–ª—å")) {
          aiResponse = "–°—Ç–∏–ª—å –ø–∏—Å—å–º–∞ - —ç—Ç–æ –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –≥–æ–ª–æ—Å! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–µ—Ç–æ–≤:\n\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥ –≤–º–µ—Å—Ç–æ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ\n‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∑–º–æ–≤ –∏ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π\n‚Ä¢ –ü–∏—à–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã\n\n–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏—Ç—å: –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –∏–ª–∏ –¥–µ–ª–æ–≤–æ–π?";
        } else {
          aiResponse = "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ –ø–∏—Å—å–º—É! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –ø–∏—Å—å–º–∞. –ú–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞, —Å—Ç–∏–ª—å, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?";
        }
      } else if (subject === "speaking") {
        if (inputValue.toLowerCase().includes("–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω")) {
          aiResponse = "–ü—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ - –∫–ª—é—á –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏–∫:\n\nüéØ **–°–ª—É—à–∞–π—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ** - –∏–º–∏—Ç–∏—Ä—É–π—Ç–µ –Ω–æ—Å–∏—Ç–µ–ª–µ–π —è–∑—ã–∫–∞\nüéØ **–ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Å–µ–±—è** - –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ –æ—à–∏–±–∫–∏\nüéØ **–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Å–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫–∏** - —É–ª—É—á—à–∞—é—Ç –∞—Ä—Ç–∏–∫—É–ª—è—Ü–∏—é\nüéØ **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–µ—Ä–∫–∞–ª–æ** - —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –≥—É–±\n\n–ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ?";
        } else if (inputValue.toLowerCase().includes("—É–≤–µ—Ä–µ–Ω")) {
          aiResponse = "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\nüí™ **–ì–æ–≤–æ—Ä–∏—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ** - –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å\nüí™ **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—É–∑—ã** - –æ–Ω–∏ –ø–æ–º–æ–≥–∞—é—Ç —Å–æ–±—Ä–∞—Ç—å—Å—è —Å –º—ã—Å–ª—è–º–∏\nüí™ **–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –ø–µ—Ä–µ–¥ –∑–µ—Ä–∫–∞–ª–æ–º** - –ø—Ä–∏–≤—ã–∫–∞–π—Ç–µ –∫ —Å–µ–±–µ\nüí™ **–ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö —Ç–µ–º** - –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π—Ç–µ\n\n–í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å?";
        } else {
          aiResponse = "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ, –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?";
        }
      } else if (subject === "math") {
        if (inputValue.toLowerCase().includes("–∞–ª–≥–µ–±—Ä")) {
          aiResponse = "–ê–ª–≥–µ–±—Ä–∞ - —ç—Ç–æ —è–∑—ã–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏! –í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:\n\nüìê **–£—Ä–∞–≤–Ω–µ–Ω–∏—è** - —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏\nüìê **–§—É–Ω–∫—Ü–∏–∏** - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏\nüìê **–°–∏—Å—Ç–µ–º—ã —É—Ä–∞–≤–Ω–µ–Ω–∏–π** - –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–∞–≤–Ω–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\nüìê **–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è** - —É—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–π —Å—Ç–µ–ø–µ–Ω–∏\n\n–° –∫–∞–∫–æ–π —Ç–µ–º—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å?";
        } else if (inputValue.toLowerCase().includes("–≥–µ–æ–º–µ—Ç—Ä")) {
          aiResponse = "–ì–µ–æ–º–µ—Ç—Ä–∏—è - —ç—Ç–æ –∏–∑—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞! –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:\n\nüî∑ **–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è** - —Ñ–∏–≥—É—Ä—ã –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏\nüî∑ **–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è** - –æ–±—ä–µ–º–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã\nüî∑ **–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è** - —É–≥–ª—ã –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–∏\nüî∑ **–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è** - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è\n\n–ö–∞–∫–∞—è –æ–±–ª–∞—Å—Ç—å –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?";
        } else {
          aiResponse = "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ª—é–±—ã–º–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º–∏. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –∞–ª–≥–µ–±—Ä–∞, –≥–µ–æ–º–µ—Ç—Ä–∏—è, —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?";
        }
      } else {
        aiResponse = `–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ ${subject}! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–æ–π —Ç–µ–º–æ–π. –ú–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞?`;
      }

      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: aiResponse,
        isUser: false,
        timestamp: new Date().toISOString(),
      };
      setMessages(prev => [...prev, aiMessage]);
      setIsLoading(false);
    }, 1000);
  };

  return (
    <div className="flex flex-col h-full">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
      <div className="bg-muted p-4 border-b border-border">
        <h3 className="font-semibold text-foreground capitalize">{subject}</h3>
        <p className="text-sm text-muted-foreground">
          –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ–º–æ—â—å
        </p>
      </div>

      {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {messages.map((message) => (
          <ChatMessage
            key={message.id}
            message={message.text}
            isUser={message.isUser}
            timestamp={message.timestamp}
          />
        ))}
        
        {/* –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤ */}
        {messages.length === 1 && (
          <div className="space-y-3">
            <p className="text-sm text-muted-foreground text-center">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:</p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
              {subject === "writing" && (
                <>
                  <button
                    onClick={() => setInputValue("–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –≥—Ä–∞–º–º–∞—Ç–∏–∫—É?")}
                    className="text-left p-3 bg-accent rounded-lg hover:bg-accent/80 transition-colors text-sm"
                  >
                    –ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –≥—Ä–∞–º–º–∞—Ç–∏–∫—É?
                  </button>
                  <button
                    onClick={() => setInputValue("–ö–∞–∫ —Ä–∞–∑–≤–∏—Ç—å —Å—Ç–∏–ª—å –ø–∏—Å—å–º–∞?")}
                    className="text-left p-3 bg-accent rounded-lg hover:bg-accent/80 transition-colors text-sm"
                  >
                    –ö–∞–∫ —Ä–∞–∑–≤–∏—Ç—å —Å—Ç–∏–ª—å –ø–∏—Å—å–º–∞?
                  </button>
                </>
              )}
              {subject === "speaking" && (
                <>
                  <button
                    onClick={() => setInputValue("–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ?")}
                    className="text-left p-3 bg-accent rounded-lg hover:bg-accent/80 transition-colors text-sm"
                  >
                    –ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ?
                  </button>
                  <button
                    onClick={() => setInputValue("–ö–∞–∫ —Å—Ç–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–µ–µ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ?")}
                    className="text-left p-3 bg-accent rounded-lg hover:bg-accent/80 transition-colors text-sm"
                  >
                    –ö–∞–∫ —Å—Ç–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–µ–µ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ?
                  </button>
                </>
              )}
              {subject === "math" && (
                <>
                  <button
                    onClick={() => setInputValue("–†–∞—Å—Å–∫–∞–∂–∏ –æ–± –æ—Å–Ω–æ–≤–∞—Ö –∞–ª–≥–µ–±—Ä—ã")}
                    className="text-left p-3 bg-accent rounded-lg hover:bg-accent/80 transition-colors text-sm"
                  >
                    –†–∞—Å—Å–∫–∞–∂–∏ –æ–± –æ—Å–Ω–æ–≤–∞—Ö –∞–ª–≥–µ–±—Ä—ã
                  </button>
                  <button
                    onClick={() => setInputValue("–ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –≥–µ–æ–º–µ—Ç—Ä–∏—è?")}
                    className="text-left p-3 bg-accent rounded-lg hover:bg-accent/80 transition-colors text-sm"
                  >
                    –ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –≥–µ–æ–º–µ—Ç—Ä–∏—è?
                  </button>
                </>
              )}
            </div>
          </div>
        )}
        
        {isLoading && (
          <div className="flex justify-start">
            <div className="chat-message chat-ai">
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-current rounded-full animate-pulse"></div>
                <div className="w-2 h-2 bg-current rounded-full animate-pulse delay-100"></div>
                <div className="w-2 h-2 bg-current rounded-full animate-pulse delay-200"></div>
              </div>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>

      {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
      <InputArea
        value={inputValue}
        onChange={setInputValue}
        onSubmit={handleSubmit}
        disabled={isLoading}
        placeholder={`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ ${subject}...`}
      />
    </div>
  );
};

export default ChatWindow;